// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

//  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations

// model Account {
//   id                String  @id @default(cuid())
//   userId            String
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String? @db.Text
//   access_token      String? @db.Text
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String? @db.Text
//   session_state     String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
//   @@index([userId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@index([userId])
// }

// model User {
//   id            String    @id @default(cuid())
//   name          String?
//   email         String?   @unique
//   password      String
//   emailVerified DateTime?
//   image         String?
//   accounts      Account[]
//   sessions      Session[]
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

model PessoaAdotante {
  codPessoaAdotante Int    @id @default(autoincrement())
  codUsuario        Int    @unique
  nome              String
  CPF               String
  codEndereco       Int
  telefone          String
  celular           String

  usuario         Usuario           @relation(fields: [codUsuario], references: [codUsuario])
  interesseAdocao InteresseAdocao[]
}

model Usuario {
  codUsuario      Int      @id @default(autoincrement())
  email           String   @unique
  senha           String
  habilitado      Boolean  @default(true)
  dataCadastro    DateTime @default(now())
  dataAtualizacao DateTime @default(now())

  PessoaAdotante PessoaAdotante?
  pessoaONG      PessoaONG?
}

model PessoaONG {
  codPessoaONG Int    @id @default(autoincrement())
  codUsuario   Int    @unique
  nomeONG      String
  CNPJ         String
  nomeResp     String
  CPFResp      String
  teelfone     String
  codEndereco  Int

  usuario Usuario   @relation(fields: [codUsuario], references: [codUsuario])
  petsONG petsONG[]
}

model Pet {
  codPet       Int    @id @default(autoincrement())
  codPessoaONG Int
  tipo         String
  nome         String
  idade        String
  cor          String
  porte        String
  descricao    String
  instituicao  String
  telefone     String
  codCidade    Int
  codEstado    Int

  interesseAdocao InteresseAdocao[]
  petsONG         petsONG[]
}

model petsONG {
  codPetsONG   Int @id @default(autoincrement())
  codPessoaONG Int
  codPet       Int

  pessoaONG PessoaONG @relation(fields: [codPessoaONG], references: [codPessoaONG])
  pet       Pet       @relation(fields: [codPet], references: [codPet])
}

model DicionarioCidade {
  codCidade Int    @id @default(autoincrement())
  nome      String
  codEstado Int

  dicinarioEstado DicinarioEstado @relation(fields: [codEstado], references: [codEstado])
  Endereco        Endereco[]
}

model DicinarioEstado {
  codEstado Int    @id @default(autoincrement())
  nome      String

  dicionarioCidade DicionarioCidade[]
  Endereco         Endereco[]
}

model Endereco {
  codEndereco   Int    @id @default(autoincrement())
  logradouro    String
  numero        String
  bairro        String
  completemento String
  CEP           String
  codCidade     Int
  codEstado     Int

  dicionarioCidade DicionarioCidade @relation(fields: [codCidade], references: [codCidade])
  dicinarioEstado  DicinarioEstado  @relation(fields: [codEstado], references: [codEstado])
}

model InteresseAdocao {
  codInteresseAdocao Int      @id @default(autoincrement())
  codPessoaAdotante  Int
  codPet             Int
  dataInteresse      DateTime @default(now())

  pessoaAdotante PessoaAdotante @relation(fields: [codPessoaAdotante], references: [codPessoaAdotante])
  pet            Pet            @relation(fields: [codPet], references: [codPet])
}
